{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"cpp_snippet": {
		"prefix": "cpp",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define LLMIN LONG_LONG_MIN",
			"#define LLMAX LONG_LONG_MAX",
			"#define IMIN INT_MIN",
			"#define IMAX INT_MAX",
			"#define ff first",
			"#define ss second",
			"#define pb push_back",
			"#define all(a) a.begin(),a.end()",   
			"#define rep(i,a,b) for(auto i=(a); i<(b); i++)",
			"#define dec(i,n,a) for(auto i=(n); i>=(a); i--)",
			"#define nl '\\n'",
			"#define sz(s) s.size()",
			"#define len(s) s.length()",
			"#define inp(a) for(auto& i: a) cin >> i",
			"#define prt(a) for(auto& i: a) cout << i << ' '",
			"#define _ auto",
			"#define Yes cout << \"Yes\" << endl",
			"#define No cout << \"No\" << endl",
			"#define YES cout << \"YES\" << endl",
			"#define NO cout << \"NO\" << endl",
			"#define inc int t_; cin >> t_; while(t_--)",
			"typedef int64_t ll;",
			"typedef uint64_t ull;",
			"typedef vector<bool> vb;",
			"typedef map<int,int> mii;",
			"typedef map<string,int> msi;",
			"typedef pair<int32_t,int32_t> pii;",
			"typedef pair<ll,ll> pll;",
			"typedef vector<int32_t> vi;",
			"typedef vector<ll> vll;",
			"typedef vector<string> vs;",
			"typedef vector<vector<int32_t>> vvi;",
			"typedef vector<vector<ll>> vvll;",
			"typedef vector<vector<string>> vvs;",
			"//#define _DEBUG",
			" ",
			"void solve() {",
			"\t$1",
			"}",
			" ",
			"int main() {",
			"\tios_base::sync_with_stdio(0); cin.tie(0);cout.tie(0); ",
			"\t#ifdef _DEBUG",
			"\tfreopen(\"input.txt\", \"r\", stdin);",
			"\tfreopen(\"output.txt\", \"w\", stdout);",
			"\t#endif",
			"",
			"\t$2inc solve();",
			"\t",
			"\t",
			"\treturn 0;",
			"}",
		
		],
		"description": "cpp for OP"
	}

}
